server:
  port: 35000


spring:
  main:
    allow-bean-definition-overriding: true
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedHeaders:
              - x-requested-with
              - authorization
              - content-type
              - credential
              - X-AUTH-TOKEN
              - X-CSRF-TOKEN
            allowedMethods:
              - POST
              - GET
              - PUT
              - OPTIONS
              - DELETE
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Gateway GlobalFilter
            preLogger: true
            postLogger: true
      routes:
        - id: erp-svc
          uri: http://localhost:34000/
          predicates:
            - Path=/erp/**
          filters:
            - name: ERPFilter
              args:
                baseMessage: Spring Cloud Gateway ERPFilter
                preLogger: true
                postLogger: true
        - id: wms-svc
          uri: http://localhost:34002/
          predicates:
            - Path=/wms/**
          filters:
            - name: WMSFilter
              args:
                baseMessage: Spring Cloud Gateway WMSFilter
                preLogger: true
                postLogger: true
  datasource:
    driver-class-name: oracle.jdbc.driver.OracleDriver
    url: jdbc:oracle:thin:@10.20.101.17:1531/test1
    username: apps
    password: apps
  jpa:
    properties:
      hibernate:
        format_sql: true
        dialect: com.gateway.config.database.CustomOracleDialect

  redis:
    host: localhost
    port: 6379
    jedis.pool.max-active: 10000
    jedis.pool.max-idle: 50
    jedis.pool.max-wait: -1
    jedis.pool.min-idle: 0
    timeout: 0


#  security:
#    oauth2:
#      client:
#        registration:
#          gateway:
#            provider: uaa
#            client-id: hallahds
#            client-secret: hallahdsapi
#            authorization-grant-type: authorization_code
##            redirect-uri-template: "{baseUrl}/login/oauth2/code/{registrationId}"
#            scope: openid,profile,email,resource.read
#        provider:
#          uaa:
#            authorization-uri: http://localhost:34009/oauth/authorize
#            token-uri: http://uaa:8090/uaa/oauth/token
#            user-info-uri: http://uaa:8090/uaa/userinfo
#            user-name-attribute: sub
#            jwk-set-uri: http://uaa:8090/uaa/token_keys


#  security:
#    oauth2:
#      client:
#        client-id: hallahds
#        client-secret: hallahdsapi
jwt:
  secret: hallahds
secret:
  salt:
    key: hallahdstest

custom:
  clientId: hallahds
  clientSecret: secret
  jwtkey: hallahds
  accessTokenValidTime: 1060
  refreshTokenValidTime: 61060
  scopes:
    - read
    - profile
    - write
  grantTypes:
    - authorization_code
    - password
    - refresh_token

authenticated-server:
  ipList:
    - 10.20.101.181
    - 10.20.101.143
    - 10.30.74.1
    - 10.30.71.156
