server:
  port: 31000

spring:
  main:
    allow-bean-definition-overriding: true
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedHeaders:
              - x-requested-with
              - authorization
              - content-type
              - credential
              - X-AUTH-TOKEN
              - X-CSRF-TOKEN
            allowedMethods:
              - POST
              - GET
              - PUT
              - OPTIONS
              - DELETE
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Gateway GlobalFilter
            preLogger: true
            postLogger: true
      # MSA 라우팅 정의
      # ID, 목적지(uri), 조건(Predicate), 필터로 구성된다.
    routes:
      - id: user-service
        # 목적지
        uri: http://10.20.101.134/api/auth
        # 조건부 집합 Header나 Parameter같은 HTTP 요청의 모든 항목 비교
        # 아래와 같은 경우 localhost:8080/user 호출하게 되면 localhost:8081/user로 라우팅 된다.
        predicates:
          - Path=/api/auth/**
        # GatewayFilter 인스턴스, Filter에서는 다운스트림 요청 전후에 요청/응답 가능
#        filters:
#          - name: UserFilter
#          args:
#            baseMessage: API UserFilter
#            preLogger: true
#            postLogger: true
      - id: erp-service
        uri: http://10.20.101.134/api/erp
        predicates:
          - Path=/api/erp/**
#        filters:
#          - name: ShopFilter
#          args:
#          baseMessage: Taeu ShopFilter
#          preLogger: true
#          postLogger: true

  redis:
    host: localhost
    port: 6379
    jedis.pool.max-active: 10000
    jedis.pool.max-idle: 50
    jedis.pool.max-wait: -1
    jedis.pool.min-idle: 0
    timeout: 0

jwt:
  secret: hallahds
secret:
  salt:
    key: hallahdstest
