server:
  port: 31000
  ssl:
    enabled: false

spring:
  application:
    name: HALLAHDS-GATEWAY-SERVICE
  main:
    allow-bean-definition-overriding: true
  cloud:
    circuitbreaker:
      resilience4j:
        enabled: true
    gateway:
      routes:
        # erp API service --------------------------------------------------#
        - id: api-intf
          uri: lb://HALLAHDS-API-SERVICE
          predicates:
            - Path=/api/intf/**
            - Method=POST, GET, PUT
          filters:
            - RewritePath=/api/intf/?(?<segment>.*), /$\{segment}
            - GlobalFilter
        # WMS API service --------------------------------------------------#
        - id: api-wms
          uri: lb://WMS-INTF-SERVICE
          predicates:
            - Path=/api/wms/**
            - Method=POST, GET, PUT
          filters:
            - RewritePath=/api/wms/?(?<segment>.*), /$\{segment}
            - GlobalFilter
        # homs service  --------------------------------------------------#
        - id: api-homs
          uri: ${server.api.homs}
          predicates:
            - Path=/api/homs/**
            - Method=POST, GET, PUT, DELETE
          filters:
            - RewritePath=/api/homs/?(?<segment>.*), /$\{segment}
        # adm service --------------------------------------------------#
        - id: api-adm
          uri: lb://GLOW-ADM-SERVICE
          predicates:
            - Path=/api/adm/**
            - Method=POST, GET, PUT, DELETE, OPTIONS
          filters:
            - RewritePath=/api/adm/?(?<segment>.*), /adm/$\{segment}
            - GlobalFilter
        # mdm service --------------------------------------------------#
        - id: api-mdm
          uri: lb://GLOW-MDM-SERVICE
          predicates:
            - Path=/api/mdm/**
            - Method=POST, GET, PUT, DELETE, OPTIONS
          filters:
            - RewritePath=/api/mdm/?(?<segment>.*), /mdm/$\{segment}
        # bms service --------------------------------------------------#
        - id: api-bms
          uri: lb://GLOW-BMS-SERVICE
          predicates:
            - Path=/api/bms/**
            - Method=POST, GET, PUT, DELETE, OPTIONS
          filters:
            - RewritePath=/api/bms/?(?<segment>.*), /bms/$\{segment}
        # vms service --------------------------------------------------#
        - id: api-vms
          uri: lb://GLOW-VMS-SERVICE
          predicates:
            - Path=/api/vms/**
            - Method=POST, GET, PUT, DELETE, OPTIONS
          filters:
            - RewritePath=/api/vms/?(?<segment>.*), /vms/$\{segment}

      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedHeaders:
              - $systemver
              - x-requested-with
              - authorization
              - content-type
              - credential
              - X-AUTH-TOKEN
              - X-CSRF-TOKEN
            allowedMethods:
              - POST
              - GET
              - PUT
              - OPTIONS
              - DELETE
            maxAge: 1728000
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Gateway GlobalFilter
            preLogger: true
            postLogger: true
      httpclient:
        max-header-size: 52428800
        connect-timeout: 1800000
        response-timeout: 30m


resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true # actuator를 통해 circuitbraker 상태를 확인하기 위해 설정
        minimumNumberOfCalls: 5 # Circuit Breaker가 에러 비율 또 slow call 비율을 계산하기 전에 요구되는 최소한의 요청 수
        failureRateThreshold: 50  # 에러 비율 (퍼센트)로 해당 값 이상으로 에러 발생시 서킷이 Open 된다.
        waitDurationInOpenState: 10s  # 서킷의 상태가 Open에서 Half-open으로 변경되기 전에 Circuit Breaker가 기다리는 시간
    instances:
      testCircuitBreaker:
        baseConfig: default

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true
    health:
      show-details: always # actuator에서 디테일한 정보들을 확인하기 위해 설정
  health:
    circuitbreakers:
      enabled: true # actuator를 통해 circuitbraker 상태를 확인하기 위해 설정


jwt.secret: hallahds
secret:
  salt:
    key: hallahdstest

##################################################################################################################
# LOG4J 관련
##################################################################################################################
logging:
  level:
    sql: error
    root: info
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    console: "%d %-5level %logger : %msg%n"
  logback:
    rollingpolicy:
      clean-history-on-start: false
      max-file-size: 500MB
      max-history: 10
